apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.common.appName }}
    app.kubernetes.io/name: {{ .Values.common.appName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    name: share-app{{ .Values.instanceIdWithinNamespace }}
    release: {{ .Release.Name }}
  name: share-app{{ .Values.instanceIdWithinNamespace }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.shareApp.replicas }}
  selector:
    matchLabels:
      name: share-app{{ .Values.instanceIdWithinNamespace }}
  template:
    metadata:
      annotations:
        hook.activate.cpd.ibm.com/command: '[]'
        hook.deactivate.cpd.ibm.com/command: '[]'          
        productName: IBM Planning Analytics Workspace
        productID: com.ibm.ba.paw.{{ .Release.Name }}
        productVersion: {{ .Release.Name }}
      labels:
        app: {{ .Values.common.appName }}
        app.kubernetes.io/name: {{ .Values.common.appName }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        name: share-app{{ .Values.instanceIdWithinNamespace }}
        release: {{ .Release.Name }}
        version: "1.0.535-ubi8"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm: 
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - share-app{{ .Values.instanceIdWithinNamespace }}
              topologyKey: kubernetes.io/paw
      containers:
        - name: share-app
          image: {{ .Values.docker_registry_prefix }}/share-app:1.0.535-ubi8
          ports:
            - containerPort: 9700
              protocol: TCP
          env:
            - name: EMAIL_SMTP_URL
              value: "{{ .Values.common.emailSmtpUrl }}"
            - name: EMAIL_FROM
              value: "{{ .Values.common.emailFrom }}"
            - name: SENDGRID_API_KEY
              value: "{{ .Values.common.sendGridApiKey }}"
          resources:
            limits:
              cpu: "{{ .Values.shareApp.cpuLimit }}"
              memory: "{{ .Values.shareApp.memoryLimit }}"
            requests:
              cpu: "{{ .Values.shareApp.cpuRequestLimit }}"
              memory: "{{ .Values.shareApp.memoryRequestLimit }}"
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /local/healthcheck
              port: 9700
            failureThreshold: {{ .Values.shareApp.livenessProbeFailureThreshold }}
            initialDelaySeconds: {{ .Values.shareApp.livenessProbeDelaySeconds }}
            periodSeconds: {{ .Values.shareApp.livenessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.shareApp.livenessProbeTimeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /local/healthcheck
              port: 9700
            failureThreshold: {{ .Values.shareApp.readinessProbeFailureThreshold }}
            initialDelaySeconds: {{ .Values.shareApp.readinessProbeDelaySeconds }}
            periodSeconds: {{ .Values.shareApp.readinessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.shareApp.readinessProbeTimeoutSeconds }}
      hostNetwork: false
      hostIPC: false
      hostPID: false
      restartPolicy: Always
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

